problem 8

# turn integer into an array of the digits - good
# multiply every 4 elements of the array - good
# put the result in another array - good
# return the largest result contained in the second array - good

def digits(n)
    Math.log10(n).floor.downto(0).map { |i| (n / 10**i) % 10 }
end

orig = 7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450

ary = digits(orig)

product = Array.new

j = 0

while j<988 do 
	product.push(ary[j]*ary[j+1]*ary[j+2]*ary[j+3]*ary[j+4]*ary[j+5]*ary[j+6]*ary[j+7]*ary[j+8]*ary[j+9]*ary[j+10]*ary[j+11]*ary[j+12]) 
	j+=1
end

puts product.max